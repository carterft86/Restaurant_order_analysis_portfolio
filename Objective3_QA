-- 1.Comebine the menu_tiems and order_details tables into a single table
-- I chose left join because I want to keep all the details in the order details table
SELECT *
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id;

-- 2. What were the least and most ordered items? what categories were they in?
-- Most ordered item is hamburger
SELECT 
	m.item_name,
    m.category,
    COUNT(*) AS num_orders
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 1;

-- The least ordered item is chicken taco
SELECT 
	m.item_name,
    m.category,
    COUNT(*) AS num_orders
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id
GROUP BY 1,2
ORDER BY 3 ASC
LIMIT 1;

-- 3. What were the top 5 orders that spent the most money?

SELECT
	order_id,
    SUM(price) AS total_spend
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id
GROUP BY  order_id
ORDER BY 2 DESC
LIMIT 5;

-- 4. view the details of the highest spend order. what insights can you gather from the results?
SELECT
	category, 
    COUNT(item_id) AS num_items
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id
WHERE o.order_id = 440
GROUP BY category;

-- Highest spend order likes italian food 

-- 5. View the details of the top 5 highest spend orders. what insights can you gather from them?
SELECT
	m.category, 
    COUNT(item_id) AS num_items
FROM menu_items m
LEFT JOIN order_details o
ON m.menu_item_id = o.item_id
WHERE o.order_id IN (440, 2075, 1975, 330, 2675)
GROUP BY m.category
ORDER BY num_items DESC

-- italian is the most ordered among our top 5 highest spend orders. 
